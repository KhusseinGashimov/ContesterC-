1)#include <iostream>
#include <cmath>
using namespace std;
void swap2(long *a,long *b){
 long c;
   c = *a; 
  *a = *b;
  *b = c;
}
int main() {
  long a, b, c;
  cin >> a >> b;
  swap2(&a,&b);
  cout<<a<<" "<<b; 
}
2)#include <iostream>
#include <cmath>
using namespace std;
int main() {
  int count;
  long arr[100];
  long int *parr = &arr[0];
  cin >> count;
  for (int i = 0; i < count; i++){
    cin >> *(parr+i);
    cout<<*(parr+i)<< " ";
  }
}
3)#include <iostream>
#include <cmath>
#include <cstring>
using namespace std;
int count(char *x, char y) {
    int cnt = 0;
    int length = strlen(x);
    for (int i = 0;i < length;i++)
        if (x[i] == y)
            cnt++;
    return cnt;
}
int main() {
    int q, e;
    int *pq=&q;
    char arr[100];
    cin >> *pq;
    for (int i = 0;i < *pq;i++) {
        char e;
        cin >> e >> arr;
        cout << count(&arr[0], e) << " " << e << " in" << " "<< arr << endl;
    }
    return 0;
}
4)#include <iostream>
#include <cmath>
#include <cstring>
using namespace std;
int main() {
    string str;
    string* pstr = &str;
    cin >> *pstr;    
    for (int i = 0; i < str.size(); i++) {
        char count = str[i];
        if (count > 64 && count < 91)cout << str[i];
        if (count > 96 && count < 123)cout << str[i];
    }
    return 0;
}
5)#include<iostream>
#include<cmath>
using namespace std;
int main() {
  int count, mass[100];
  int *pcount=mass; 
  cin >> count;
  
  //create matrix
  for (int i = 0;i < count;i++) {
    cin >> mass[i];
  }
  
  //odd number
  for (int i = 0; i < count; i++) {
    if ((*pcount+i) % 2 != 0)cout << *(pcount+i ) << " "; 
  }
  
  // even number
  for (int i = 0;i < count;i++) {
    if ((*pcount +i) % 2 == 0)cout <<*(pcount+i ) << " ";
  }
  
  return 0;
}
6)#include <iostream>
#include <cmath>
using namespace std;
int sum(int* parr,int n, int FirstZeroElement,int counter ) {
    //find First zero element
    for (int i = 0; i < n; i++) {
        if (*(parr + i) == 0) {
            FirstZeroElement = i + 1;
            break;
        }
    }
    //cycle for summarize elemnts between 2 zeros and stop if they find second zero
    for (int i = FirstZeroElement; i <= n; i++) {
        counter += *(parr + i);
        if (*(parr + i) == 0) {
            cout << counter;
            break;
        }
    }
    return 0;
}
int main() {
    int n, counter = 0, FirstZeroElement = 0, arr[100];
    int* parr = arr;
    cin >> n;
    //create matrix
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    sum(parr, n, FirstZeroElement, counter);
    return 0;
}
7)#include <iostream>
using namespace std;
int findSum(int mass[100],int b,int sum,int n){
    int mx=mass[0];
    for(int i=0;i<n;i++){
        if(mass[i]>=mx){
            mx=mass[i];
            b=i;
        }    
    }
    for(int i=0;i<b;i++){
        if(mass[i]>0){
            sum+=mass[i];
        }
    }
    cout<<sum;
    return 0;
}
int main(){
    int n;
    cin>>n;
    int mass[100],b,sum=0;
    for(int i=0;i<n;i++){
        cin>>mass[i];
    }
    findSum(mass,b,sum,n);
    return 0;
}
8)#include <iostream>
using namespace std;

int main() {
  int n, arr[100],mx=0,mm=0,a=0,b=0;
  cin >> n;
  for (int i = 0; i < n; i++) { 
    cin >> arr[i];
    if (arr[i] > mx) {
      mx = arr[i];
      a = i;
    }
    if (arr[i] < mm) {
      mm = arr[i];
      b = i;
    }
  }
  int k = 0;
  for (int i = b + 1; i < a; i++) {
    if (arr[i] % 2 == 0) {
      k++;
    }
  }
  int* pk = &k;

  cout << *pk;
  return 0;
}
9)#include <iostream>
#include <cstring>
using namespace std;
int compare(char *s1, char *s2, int x){
    if(strlen(s1)==strlen(s2)){
        for(int i=0;i<strlen(s1);i++){
            if(s1[i]!=s2[i]){
                x=0;
                cout<<"NO";
                break;
            }
            else{
                x=1;
            }
        }
    }
    else{cout<<"NO";}
    if(x==1){cout<<"YES";}
    return 0;
}
int main(){
    char s1[50],s2[50];
    int x=0;
    cin>>s1>>s2;
    compare(s1,s2,x);
    return 0;
}
10)#include <iostream>
#include <cstring>
using namespace std;
bool check(string word){
  int len = word.length();  
  for (int i = 0; i < len / 2; ++i){
    if (word[i] != word[len - i - 1]){return false;}
  }
  return true;
}
int main(){
  string str;
  string* pstr = &str;
  cin >> *pstr;
  if (check(*pstr)){cout << "YES";}
  else{cout << "NO";}
  return 0;
}
11)#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;
int main() {
  char a[100];
  int n;
  cin >> a >> n;
  for (int i = 0; i < strlen(a); i++) {
    if (a[i] >= 65 && a[i] <= 90) {
      a[i] = a[i] - n;
      if (a[i] < 65) {a[i] = a[i] + 26;}
    }
  }
  cout << a;
  return 0;
}
12)#include <iostream>
using namespace std;
int main() {
    int *parr = new int [4];
    char dot;
    bool b = true;
    cin >> parr[0]>> dot >> parr[1]>> dot >> parr[2] >> dot >> parr[3];
    for (int i = 0; i < 4; i++) {
        if (parr[i] > 255 || parr[i] < 0)b = false;
    }
    cout << b;
    return 0;
}
13)#include <iostream>
using namespace std;
int main() {
    string direction;
    int step, x = 0, y = 0;
    while (cin >> direction >> step) {
        if (direction == "North") {
          x += step;
        }
        if (direction == "South"){
          x -= step;
        }
        if (direction == "West"){
          y -= step;
        }
        if (direction == "East"){
          y += step;
        }
    }
    cout << y << " " << x;
    return 0;
}
14)#include <iostream>
using namespace std;
int main(){
    int a, b;
    int counter = 0;
    cin >> a >> b;
    for (int i = a; i <= b; i++){
        int abruc = i,z = 0,x = 0;
        for (int q = 0; q < 4; q++, abruc /= 10)z += abruc % 10;
        for (int q = 0; q < 4; q++, abruc /= 10)x += abruc % 10;
        if (z == x)counter++;
    }
    cout << counter << endl;
    return 0;
}