1)#include <iostream>
using namespace std;
int min(int a, int b, int c, int d) {
  if (a < b && a < c && a < d) {
    cout << a<<endl;
  }
  else if(b < a && b < c && b < d) {
    cout << b<<endl;
  }
  else if (c < a && c < b && c < d) {
    cout << c<< endl;
  }
  else if (d < a && d < b && d < c) {
    cout << d<< endl;
  }
  return 0;
}
int main() {
  int a, b, c, d,mi;
  cin >> a >> b >> c >> d;
  mi = min(a, b, c, d);
  return 0;
}
2)#include <iostream>
#include <cmath>
using namespace std;
double power(double a, int n) {
  cout<<pow(a, n);
  return 0;
}
int main() {
  double a, ans;
  int n;
  cin >> a >> n;
  ans=power(a,n);
  return 0;
}
3)#include <iostream>
#include <cmath>
using namespace std;
bool myXor(bool x, bool y) {
    if (x == 1 && y == 0) {
      x = true;
      y = false;
      cout << x;
    }
    else if (x == 1 && y == 1) {
      x = false;
      y = false;
      cout << x;
    }
    else if (x == 0 && y == 1) {
      x = false;
      y = true;
      cout << y;
    }
    else if (x == 0 && y == 0) {
      x = false;
      y = false;
      cout << 0;
    }  
  return 0;
}
int main() {
  int x, y;
  cin >> x >> y;
  if ((x > 1 || x<0) || (y > 1 || y<0)) {
    cout << 0;
  }
  else {
    int ans;
    ans = myXor(x, y);
  }
  return 0;
}
4)#include<iostream> 
#include<cmath>
using namespace std;
bool myXor(bool x, bool y, bool z) {
  if ((x == y) || (x==z)){
    return x;
  }
  if (y == z){
    return y;
  }
}
int main() {
  double x,y,z;
  cin >> x >> y>>z;
  cout << myXor(x,y,z);
  return 0;
}
5)#include<iostream> 
using namespace std;
char getSign(int x,int y){
    if(x>y){cout<<" > ";}
    else if(x==y){cout<<" = ";}
    else{cout<<" < ";}
}
int main() {
  double x,y;
  cin >> x >> y;
  getSign(x,y);
  return 0;
}
6)#include<iostream> 
#include<cmath>
using namespace std;
int a(int mass[100], int mass1[100], int N) {
  int num = 0, num1 = 0;
  for (int i = 0; i < N; i++) {
    if (mass[i] > 0) { num++; }
  }
  for (int j = 0; j < N; j++) {
    if (mass1[j] > 0) { num1++; }
  }
  if (num > num1) { cout << "Number of positives in the first array is greater"; return 0; }
  else if (num == num1) { cout << "Numbers are equal"; return 0; }
  else if (num < num1) { cout << "Number of positives in the second array is greater"; return 0; }
}
int main() {
  int N, mass[100], mass1[100];
  cin >> N;
  for (int i = 0; i < N; i++) { cin >> mass[i]; }
  for (int j = 0; j < N; j++) { cin >> mass1[j]; }
  a(mass, mass1, N);
  return 0;
}
7)#include <iostream>
#include <cmath>

using namespace std;

int numer(int mass[100][100], int count, int amount) {
    int sum = 0;
    for (int i = 0; i < amount; ++i) {
        if (mass[count][i] > 0) {
            sum++;
        }
        else {
            sum = sum;
        }
    }
    return sum;
}

int main() {
    int mass[100][100], mass1[100], count, amount, mx, index = 1, k = 0;
    cin >> count >> amount;

    for (int i = 0; i < count; i++) {
        for (int j = 0; j < amount; j++) {
            cin >> mass[i][j];
        }
        mass1[i] = numer(mass, i, amount);
    }

    mx = mass1[0];
    for (int i = 0; i < count; i++) {
        if (mx == mass1[i]) {
            k++;
        }
        if (mx < mass1[i]){ 
            mx = mass1[i]; 
            index = i + 1; 
        }
    }
    if (k == count) {
        cout << "Numbers are equal";
    }
    else {
        cout << index;
    }
    return 0;
}
8)#include <iostream>
using namespace std;
int num(int mass[100][100], int count, int amount) {
    int res = 0, max = 0, index = 0;
    // res=total number of series
    // max=max res number
    // index=index the longest series row
    //finding the longest series
    for (int i = 0; i < count; i++) {
        for (int j = 0; j < amount; j++) {
            if (mass[i][j + 1] == mass[i][j]) {
                res++;
                if (res > max) {
                    max = res;
                    index = i;
                }
            }
        }
        res = 0;
    }

    //cout answer
    if (max > 0) {
        cout << "Longest series is in the string" << " " << index;
    }
    else {
        cout << "No series of equal elements" << endl;
    }
    return 0;
}
int main() {
    int mass[100][100];
    int count, amount;
    cin >> count >> amount;

    //create new matrix
    for (int i = 0; i < count; i++) {
        for (int j = 0; j < amount; j++) {
            cin >> mass[i][j];
       }
    }
    num(mass, count, amount);
    return 0;
}
9)#include <iostream>
#include <cmath>
#include <cstring>
using namespace std;
int count(char mass[100], char y){
  int res = 0;
  int length = strlen(mass);
  for (int i = 0; i < length; i++)
    if (mass[i] == y) 
      res++; 
  return res;
}
int main(){
  char a, b;
  char mass[100], mass1[100];
  cin >> a >> b;
  cin >> mass >> mass1;
  cout << count(mass, a) << " " << a << " characters in " << mass << endl;
  cout << count(mass1, b) << " " << b << " characters in " << mass1;
  return 0;
}
10)#include <iostream>
#include <cmath>
#include <cstring>
using namespace std;

int numb(char a, char word[21]) {
    int k = 0;

    for (int i = 0; i < strlen(word); i++) {
        if (word[i] == '\0') break;
        if (word[i] == a) k++;
    }
    return k;
}


int main() {
    int count;    
    char str[100][20];
    cin >> count;
    
    for (int i = 0; i <  count*2; i++) {
        cin >> str[i];
    }
  
    for (int i = 0; i < count*2; i += 2) {
        cout << numb(str[i][0], str[i + 1]) << " " << str[i] << " in " << str[i + 1] << endl;
    }
    
    return 0;
}
11)#include <iostream>
#include <cmath>
#include <cstring>
using namespace std;

int numb(char a, char word[21]) {
    int k = 0;

    for (int i = 0; i < strlen(word); i++) {
        if (word[i] == '\0') break;
        if (word[i] == a) k++;
    }
    return k;
}


int main() {
    int count;    
    char str[100][20];
    cin >> count;
    
    for (int i = 0; i <  count*2; i++) {
        cin >> str[i];
    }
  
    for (int i = count*2-1; i >=0; i -= 2) {
        cout << numb(str[i-1][0], str[i]) << " " << str[i-1] << " in " << str[i] << endl;
    }
    
    return 0;
}
12)#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;
string word(string m){
  for (int i = 0; i < m.size(); i++){
    if (islower(m[i])){m[i] = toupper(m[i]);}
  }
  return m;
}
int main() {
  string m;
  cin >> m;
  cout << word(m);
  return 0;
}
13)#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;
string word(string m){
  for (int i = 0; i < m.size(); i++){
    if (islower(m[i])){m[i] = toupper(m[i]);}
    else if (isupper(m[i])) { m[i] = tolower(m[i]);}
  }
  return m;
}
int main() {
  string m;
  cin >> m;
  cout << word(m);
  return 0;
}
14)#include <iostream>
using namespace std;
void remove(string s) {
  for (int i = 0; i < s.size(); i++) {
    if (s[i] < 'A' || s[i] > 'Z' && s[i] < 'a' || s[i] > 'z') {
      s.erase(i, 1);
      i--;
      }
    }
  for(int i = 0; i < s.size(); i++) {
    if (islower(s[i])) { s[i] = toupper(s[i]); }
    else if (isupper(s[i])) { s[i] = tolower(s[i]); }
  }
  cout << s;
}
int main()
{
  string s;
  cin >> s;
  remove(s);
  return 0;
}
15)#include <iostream>
using namespace std;
int magic(int t[60],int t1[60],int t2[60]){
    if ((t1[2] >= t[2]) && (t1[1] >= t[1])) {
    t2[2] = t1[2] - t[2];
    t2[1] = t1[1] - t[1];
    t2[0] = t1[0] - t[0];
  }
  else if ((t1[2]<t[2]) && (t1[1]>t[1])) {
    t2[1] = t1[1] - t[1] - 1;
    t2[2] = 60 + t1[2] - t[2];
    t2[0] = t1[0] - t[0];
  }
  else if ((t1[2] >= t[2]) && (t1[1] < t[1])) {
    t2[2] = t1[2] - t[2];
    t2[1] = t1[1] - t[1] + 60;
    t2[0] = t1[0] - t[0] - 1;
  }
  else if ((t1[2] < t[2]) && (t1[1] < t[1])) {
    t2[0] = t1[0] - t[0] - 1;
    t2[1] = t1[1] - t[1] + 59;
    t2[2] = t1[2] - t[2] + 60;
  }
  
  for(int i=0;i<3;i++){
      if(i!=2){
          if(t2[i]<=9){
              cout <<'0'<<t2[i]<< ":";
          }
          else {
      cout << t2[i]<< ":";
      }
      }
       else{
           if(t2[i]==0){
               cout<<"00";
           }
           else{
           cout<<t2[i];
           }
           }  
      }
return 0;
}
int main() {
  int t[60], t1[60], t2[60];
  for (int i = 0; i < 3; i++) {
    cin >> t[i];
  }
  for (int i = 0; i < 3; i++) {
    cin >> t1[i];
  }
  magic(t,t1,t2);
    return 0;
}
16)#include <bits/stdc++.h>
using namespace std;
int binar(string mass,int count){
    int sum=0;
    reverse(mass.begin(),mass.end());
    for(int i=0;i<count;i++){
        int ab = mass[i]-'0';
        sum+=(ab*pow(2,i));
    }
    cout<<sum;
    return 0;
}
int main(){
    string mass;
    int count;
    cin>>count>>mass;
    binar(mass,count);
    return 0;
}
17)#include <iostream>
#include <cmath>
using namespace std;
int soldiers(int arr[100], int n) {
    int min, x;
    int compare[100];
    for (int i = 0; i < n - 1; i++) {
        compare[i] = abs(arr[i + 1] - arr[i]);
        compare[n - 1] = abs(arr[n - 1] - arr[0]);
    }
    min = compare[0];
    int index = 0;
    for (int i = 0; i < 1 ; i++) {
        if (compare[i] <=min) {
            min = compare[i];
            index = i;
        }
    } 
    for (int i = 1; i < n ;i++) {
        if (compare[i] < min) {
            min = compare[i];
            index = i;
        }
    }
    if (index == n - 1) {cout << n << " " << 1;}
    else {cout << index+1 << " "<<index+2;}
    return 0;
}
int main() {
    int n;
    cin >> n;
    int arr[100];
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    soldiers(arr, n);
}
18)#include <iostream>
#include <cmath>
using namespace std;
char numb(char s[1000]) {
    int n;
    cin >> n;
    bool dd = true;
    for (int i = 0; i < n; i++) {
        cin >> s[i];
    }
    for (int i = 0; i < n; i++) {
        if ((s[i] < '*' || s[i] > '9' || s[i] == '.' || s[i] == ',') || ((s[i] == '/') || (s[i] == '+') || (s[i] == '-') || (s[i] == '*')) && ((s[i + 1] == '*') || (s[i + 1] == '/') || (s[i + 1] == '+') || (s[i + 1] == '-'))) {
            dd = false;
            break;
        }
    }
    if (dd) {
        cout << "YES";
    }
    else {
        cout << "NO";
    }
    return 0;
}
int main()
{
    char s[1000];
    numb(s);
    return 0;
}